# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'regzalo.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QListWidgetItem
import random, requests, time, os, threading, socket, pyautogui, threaded
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium import webdriver


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(642, 400)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("E:/SCD/Python/8bcab946fdf981a1895dd54c3ff055d0.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Dialog.setWindowIcon(icon)
        self.groupBox = QtWidgets.QGroupBox(Dialog)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 381, 351))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.lw_account = QtWidgets.QListWidget(self.groupBox)
        self.lw_account.setGeometry(QtCore.QRect(10, 20, 361, 321))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.lw_account.setFont(font)
        self.lw_account.setObjectName("lw_account")
        self.groupBox_2 = QtWidgets.QGroupBox(Dialog)
        self.groupBox_2.setGeometry(QtCore.QRect(400, 10, 231, 351))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.btn_reset = QtWidgets.QPushButton(self.groupBox_2)
        self.btn_reset.setGeometry(QtCore.QRect(150, 220, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.btn_reset.setFont(font)
        self.btn_reset.setObjectName("btn_reset")
        self.te_api = QtWidgets.QTextEdit(self.groupBox_2)
        self.te_api.setGeometry(QtCore.QRect(16, 60, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.te_api.setFont(font)
        self.te_api.setObjectName("te_api")
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setGeometry(QtCore.QRect(20, 100, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox.setGeometry(QtCore.QRect(150, 180, 69, 22))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.label_3.setGeometry(QtCore.QRect(20, 180, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(20, 220, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setGeometry(QtCore.QRect(20, 30, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.te_pass = QtWidgets.QTextEdit(self.groupBox_2)
        self.te_pass.setGeometry(QtCore.QRect(16, 130, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.te_pass.setFont(font)
        self.te_pass.setObjectName("te_pass")
        self.btn_start = QtWidgets.QPushButton(self.groupBox_2)
        self.btn_start.setGeometry(QtCore.QRect(150, 260, 75, 71))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.btn_start.setFont(font)
        self.btn_start.setObjectName("btn_start")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(160, 370, 381, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.btn_reset.clicked.connect(self.thread_ip)
        self.btn_start.clicked.connect(self.thread)



    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Reg Gmail by SimCongDanh"))
        self.groupBox.setTitle(_translate("Dialog", "Account Gmail"))
        self.groupBox_2.setTitle(_translate("Dialog", "Control"))
        self.btn_reset.setText(_translate("Dialog", "Reset"))
        self.label_2.setText(_translate("Dialog", "Password :"))
        self.comboBox.setItemText(0, _translate("Dialog", "1"))
        self.comboBox.setItemText(1, _translate("Dialog", "2"))
        self.comboBox.setItemText(2, _translate("Dialog", "3"))
        self.label_3.setText(_translate("Dialog", "Thread :"))
        self.label_4.setText(_translate("Dialog", "Dcom :"))
        self.label.setText(_translate("Dialog", "API Chothuesimcode:"))
        self.btn_start.setText(_translate("Dialog", "START"))
        self.label_5.setText(_translate("Dialog", "Made by SimCongDanh : 097.234.7979 - 0886.97.6789"))

    def random_lastname(self):
        ho = {
            "Le",
            "Nguyen",
            "Ly",
            "Tran",
            "Trinh",
            "Hoai",
            "Hoang",
            "Phan",
            "Bui",
            "Do",
            "Ho",
            "Ngo",
            "Duong",
            "Huynh",
            "Pham",
            "Vo",
            "Vu",
            "Hoai"
        }
        list_ho = list(ho)
        self.last_name = random.choice(list_ho)
        return self.last_name
    @threaded.Threaded(started=True)
    def changeIp(self):
        os.system("offdcom.bat")
        time.sleep(3)
        os.system("ondcom.bat")
    def random_name(self):
        ten = {
            "huan",
            "phat",
            "thien",
            "huu",
            "tien",
            "sieu",
            "ma",
            "tieu",
            "cuong",
            "loi",
            "canh",
            "tue",
            "vu",
            "dat",
            "thanh",
            "cong",
            "kiet",
            "thai",
            "phuong",
            "hoai",
            "khanh",
            "nhat",
            "minh",
            "bao",
            "cong",
            "duc",
            "dinh",
            "khai",
            "manh",
            "vy"
        }
        list_ten = list(ten)
        self.name = random.choice(list_ten)
        return self.name
    def gerenalname(self):
        ho = {
            "Le",
            "Nguyen",
            "Ly",
            "Tran",
            "Trinh",
            "Hoai",
            "Hoang",
            "Phan",
            "Bui",
            "Do",
            "Ho",
            "Ngo",
            "Duong",
            "Huynh",
            "Pham",
            "Vo",
            "Vu",
            "Hoai"
        }
        ten_dem = {
            "van",
            "le",
            "truong",
            "to",
            "tuan",
            "huu",
            "an",
            "anh",
            "gia",
            "hoai",
            "khanh",
            "nhat",
            "minh",
            "bao",
            "cong",
            "duc",
            "dinh",
            "duy",
            "hieu",
            "khai",
            "manh",
            "vy"
        }
        ten = {
            "huan",
            "phat",
            "thien",
            "huu",
            "tien",
            "sieu",
            "ma",
            "tieu",
            "cuong",
            "loi",
            "canh",
            "tue",
            "vu",
            "dat",
            "thanh",
            "cong",
            "kiet",
            "thai",
            "phuong",
            "hoai",
            "khanh",
            "nhat",
            "minh",
            "bao",
            "cong",
            "duc",
            "dinh",
            "khai",
            "manh",
            "vy"
        }
        list_ho = list(ho)
        list_ten_dem = list(ten_dem)
        list_ten = list(ten)
        random_ho = random.choice(list_ho)
        random_ten_dem = random.choice(list_ten_dem)
        random_ten = random.choice(list_ten)
        # domains = ["@hotmail.com", "@gmail.com", "@aol.com", "@mail.com", "@mail.kz", "@yahoo.com"]
        self.randomemail_1 = self.last_name + random_ten_dem + self.name + str(random.randint(0, 999)) +  str(random.randint(0, 999)) +  str(random.randint(0, 999))
        return self.randomemail_1
    #@threaded.Threaded(started=True)
    def getnumber(self):
        url_getnumber = "https://chothuesimcode.com/api?act=number&apik=" + str(self.te_api.toPlainText()) + "&appId=1005&carrier=Viettel,Mobi,Vina"
        getnumber = requests.get(url_getnumber).json()
        resulf_getnumber = getnumber["Result"]
        print(resulf_getnumber)
        # self.lv_status.addItem(QListWidgetItem("Number : 0" + str(resulf_getnumber["Number"])))
        self.number = resulf_getnumber["Number"]
        # self.lv_status.addItem(QListWidgetItem("ID : " + str(resulf_getnumber["Id"])))
        self.id = resulf_getnumber["Id"]
        #return number, id
    #@threaded.Threaded(started=True)
    def get_otp(self, id):
        url_getotp = "https://chothuesimcode.com/api?act=code&apik=" + str(self.te_api.toPlainText()) + "&id=" + str(id)
        getotp = requests.get(url_getotp).json()
        print(getotp)
        resulf_getotp = getotp["Result"]
        #self.lv_status.addItem(QListWidgetItem(str(resulf_getotp)))
        otp = resulf_getotp['Code']
        #self.lv_status.addItem(QListWidgetItem("OTP : " + str(otp)))
        return otp
    def thread_ip(self):
        t = threading.Thread(target=self.changeIp)
        t.start()
        t.join()
    def getprofile(self):
        profile = webdriver.FirefoxProfile()
        profile.set_preference("browser.privatebrowsing.autostart", True)
        return profile
    @threaded.Threaded(started=True)
    def runprofile(self):
        browser = webdriver.Firefox(firefox_profile=self.getprofile())
        browser.get("https://accounts.google.com/")
        browser.implicitly_wait(5)
        browser.find_element_by_xpath("/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[2]/div/div[2]/div/div/span/span").click()
        time.sleep(0.5)
        browser.find_element_by_xpath("/html/body/div[1]/div[1]/div[2]/div[2]/div/div/span[1]/div[2]/div").click()
        last_name = self.random_lastname()
        name = self.random_name()
        username = self.gerenalname()
        password = self.te_pass.toPlainText()
        time.sleep(0.5)
        last_name_find = browser.find_element_by_id("lastName")
        for wordlastname in last_name:
            last_name_find.send_keys(wordlastname)
            time.sleep(0.1)
        firstname_find = browser.find_element_by_id("firstName")
        for wordname in name:
            firstname_find.send_keys(wordname)
            time.sleep(0.12)
        time.sleep(1)
        username_find = browser.find_element_by_id("username")
        for wordusername in username:
            username_find.send_keys(wordusername)
            time.sleep(0.09)
        time.sleep(1)
        password_find = browser.find_element_by_name("Passwd")
        for wordpass in password:
            password_find.send_keys(wordpass)
            time.sleep(0.1)
        confirmpass = browser.find_element_by_name("ConfirmPasswd")
        for wordspass in password:
            confirmpass.send_keys(wordspass)
            time.sleep(0.13)
        time.sleep(1)
        browser.find_element_by_id("accountDetailsNext").click()
        self.getnumber()
        time.sleep(2)
        number = self.number
        id = self.id
        #id = self.getnumber()[-1]
        #number = "0" + number
        while number == None:
            self.getnumber()
            number = self.number
            id = self.id
        else:
            number_find = browser.find_element_by_id("phoneNumberId")
            for numberword in number:
                number_find.send_keys(numberword)
                time.sleep(0.3)
        time.sleep(1)
        browser.find_element_by_id("phoneNumberId").send_keys(Keys.ENTER)
        #time.sleep(30)
        otp = self.get_otp(id)
        """timeout = 0
        start = time.time()
        stop = time.time()"""
        while otp == None:
            time.sleep(5)
            otp = self.get_otp(id)
        else:
            otp_find = browser.find_element_by_id("code")
            for i in otp:
                otp_find.send_keys(i)
                time.sleep(0.2)
            browser.find_element_by_id("code").send_keys(Keys.ENTER)
        time.sleep(1)
        browser.find_element_by_xpath("//*[@id='phoneNumberId']").clear()
        time.sleep(1)
        recoveryemail = self.gerenalname() + "@yahoo.com"
        recoveryemail = str(recoveryemail)
        recoverymail = browser.find_element_by_name("recoveryEmail")
        for wordrecoverymail in recoveryemail:
            recoverymail.send_keys(wordrecoverymail)
            time.sleep(0.07)
        browser.find_element_by_id("day").send_keys(str(random.choice(range(10,30))))
        time.sleep(1)
        select_month = Select(browser.find_element_by_id("month"))
        select_month.select_by_value(str(random.choice(range(1,12))))
        time.sleep(1)
        browser.find_element_by_id("year").send_keys(str(random.choice(range(1980,2002))))
        time.sleep(1)
        select_gender = Select(browser.find_element_by_id("gender"))
        select_gender.select_by_value(str(random.choice(range(1,4))))
        time.sleep(1)
        browser.find_element_by_id("year").send_keys(Keys.ENTER)
        time.sleep(2)
        browser.find_element_by_id("termsofserviceNext").click()
        self.lw_account.addItem(QListWidgetItem(str(username) + "|" + str(self.te_pass.toPlainText()) + "|0" + str(number) + "|" + str(recoveryemail)))
        f = open("account.txt", "a+")
        f.write(str(username) + "|" + str(self.te_pass.toPlainText()) + "|0" + str(number) + "|" + str(recoveryemail) + "\n")
        f.close()
        self.lw_account.addItem(QListWidgetItem("Done!!!!!!!!!!"))
        browser.execute_script('''window.open("https://www.youtube.com/", "youtube");''')
        time.sleep(40)
        browser.quit()

    def thread(self):
        t = threading.Thread(target=self.runprofile())
        t.start()
        t.join()
if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    Dialog = QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
